// <auto-generated />
using Filmes_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Filmes_API.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20220816141028_add_fk")]
    partial class add_fk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Filmes_API.Models.Diretor", b =>
                {
                    b.Property<int>("Id_diretor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_diretor"));

                    b.Property<string>("nome_diretor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_diretor");

                    b.ToTable("Diretor");
                });

            modelBuilder.Entity("Filmes_API.Models.Filme", b =>
                {
                    b.Property<int>("Id_filme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_filme"));

                    b.Property<int>("DiretorId_diretor")
                        .HasColumnType("integer");

                    b.Property<int>("GeneroId_genero")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Genero")
                        .HasColumnType("integer");

                    b.Property<int>("Id_diretor")
                        .HasColumnType("integer");

                    b.Property<int>("ano")
                        .HasColumnType("integer");

                    b.Property<string>("classif_indicativa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("duracao")
                        .HasColumnType("integer");

                    b.Property<float>("nota")
                        .HasColumnType("real");

                    b.Property<string>("sinopse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_filme");

                    b.HasIndex("DiretorId_diretor");

                    b.HasIndex("GeneroId_genero");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("Filmes_API.Models.Genero", b =>
                {
                    b.Property<int>("Id_genero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_genero"));

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_genero");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("Filmes_API.Models.Filme", b =>
                {
                    b.HasOne("Filmes_API.Models.Diretor", "Diretor")
                        .WithMany("Filmes")
                        .HasForeignKey("DiretorId_diretor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Filmes_API.Models.Genero", "Genero")
                        .WithMany("Filmes")
                        .HasForeignKey("GeneroId_genero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diretor");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Filmes_API.Models.Diretor", b =>
                {
                    b.Navigation("Filmes");
                });

            modelBuilder.Entity("Filmes_API.Models.Genero", b =>
                {
                    b.Navigation("Filmes");
                });
#pragma warning restore 612, 618
        }
    }
}
